african_colony = {
	copy_from = default
	
	# Graphics:
	sprite = GFX_subject_colony_icon
	diplomacy_overlord_sprite = GFX_diplomacy_leadcolony
	diplomacy_subject_sprite = GFX_diplomacy_subjectcolony

	# Properties:
	base_liberty_desire = -25.0
	transfer_trade_power = yes
	can_release_and_play = yes
	uses_tariffs = yes
	eats_overlords_colonies = no
	has_colonial_parent = yes
	overlord_can_attack = no
	overlord_can_be_subject = yes
	takes_diplo_slot = no
	can_release_in_peace = no
	dynamically_created_during_history = no
	overlord_enforce_peace_attacking = yes
	can_transfer_in_peace = no
	press_sailors = yes
	forcelimit_bonus = 1.0
	
	liberty_desire_development_ratio = 0.1

	max_government_rank = 1
	cities_required_for_bonuses = 10

	relative_power_class = 0

	can_fight = {
		other_overlord = colony
		neighboring_primitives = yes
		colonial_region_nations = yes
	}
	can_rival = {
		other_overlord = colony
		neighboring_primitives = yes
		colonial_region_nations = yes
	}
	can_ally = {
		neighboring_primitives = yes
	}

	# Subject Interactions:
	customize_subject = no
	replace_governor = no
	start_colonial_war = yes
	increase_tariffs = yes
	decrease_tariffs = yes

	# Modifiers:
	modifier_overlord = {
		modifier = large_colonial_nation
		trigger = {
			num_of_cities = 10
		}
	}

	overlord_opinion_modifier = colonial_relation
	subject_opinion_modifier = colonial_relation
}

timar = {
	copy_from = tributary_state
	
	sprite = GFX_icon_vassal
	diplomacy_overlord_sprite = GFX_diplomacy_leadvassal # The one that the overlord sees
	diplomacy_subject_sprite = GFX_diplomacy_amvassal
	
	can_have_subjects_of_other_types = yes
	joins_overlords_wars = yes
	can_fight_independence_war = no
	overlord_can_attack = no
	takes_diplo_slot = no
	relative_power_class = 0
	uses_military_focus = yes
	can_release_in_peace = no
	overlord_protects_external = yes
	counts_for_borders = no
	can_use_claims = no
	can_send_tribute = no
	gets_help_with_rebels = yes
	trust_on_start = 50
	base_liberty_desire = -10.0
	liberty_desire_development_ratio = 0.25
	forcelimit_bonus = 1.0
	military_focus = 2.0
	share_rebel_popup = yes
	can_set_mil_focus = yes
	can_send_missionary_to_subject = yes
	
	can_fight = {
		independent_nations = yes
		other_overlord = all
	}
	can_rival = {
		independent_nations = yes
		other_overlord = all
	}
	can_ally = {
		independent_nations = yes
		other_overlord = all
	}
	can_marry = {
		independent_nations = yes
		other_overlord = all
	}
	
	subsidize_armies = yes
	send_officers = yes
	
	enforce_religion = yes
	grant_core_claim = yes
	bestow_gifts = no
	send_additional_troops = no
	demand_artifacts = no
	demand_additional_tribute = no
	placate_rulers = yes
	knowledge_sharing = yes
	# (continuous)
	embargo_rivals = yes	
}

permanent_union = {
	copy_from = default

	# Graphics:
	sprite = GFX_court_union
	diplomacy_overlord_sprite = GFX_diplomacy_leadunions
	diplomacy_subject_sprite = GFX_diplomacy_inunion

	# Properties:
	has_overlords_ruler = yes
	can_be_integrated = no
	overlord_can_attack = no
	has_power_projection = no
	gets_help_with_rebels = yes
	can_have_subjects_of_other_types = yes
	can_union_break = yes
	transfer_subjects_when_made = yes
	takes_diplo_slot = no

	liberty_desire_negative_prestige = 1.0
	military_focus = 0.66

	relative_power_class = 1

	restoration_cb = cb_restore_personal_union
	
	# Subject Interactions:
	placate_rulers = no
	enforce_culture = yes
	siphon_income = yes
	support_loyalists = yes

	# Modifiers:
	modifier_overlord = {
		modifier = union_subject
	}

	overlord_opinion_modifier = in_union
	subject_opinion_modifier = in_union
}

prussian_congress_vassal = {
	copy_from = vassal
	count = vassal
	
	takes_diplo_slot = no
}

protectorate = {
	copy_from = default
	
	# Graphics:
	sprite = GFX_icon_protectorate
	diplomacy_overlord_sprite = GFX_diplomacy_leadprotectorate # The one that the overlord sees
	diplomacy_subject_sprite = GFX_diplomacy_amprotectorate	# The one that the subject sees
	
	# Triggers:
	is_potential_overlord = {
		is_subject = no
		tech_difference = -2
		OR = {
			technology_group = western
			technology_group = eastern
			technology_group = roman_group
			technology_group = muslim
		}
	}
	
	can_be_established = {
		FROM = {
			ROOT = {
				is_subject = no
				NOT = { technology_group = western }
				NOT = { technology_group = eastern }
				NOT = { technology_group = roman_group }
				NOT = { technology_group = muslim }
				PREV = {
					NOT = { same_continent = PREV }
				}
				is_nomad = no
				OR = {
					PREV = { institution_difference = { who = PREV value = 3 } }
					# THIS is at least 9 techs behind PREV
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = our_adm_tech_level
							value = trigger_value:adm_tech
						}
						export_to_variable = {
							which = our_dip_tech_level
							value = trigger_value:dip_tech
						}
						export_to_variable = {
							which = our_mil_tech_level
							value = trigger_value:mil_tech
						}
						export_to_variable = {
							which = their_adm_tech_level
							value = trigger_value:adm_tech
							who = PREV
						}
						export_to_variable = {
							which = their_dip_tech_level
							value = trigger_value:dip_tech
							who = PREV
						}
						export_to_variable = {
							which = their_mil_tech_level
							value = trigger_value:mil_tech
							who = PREV
						}
						export_to_variable = {
							which = our_total_tech_level
							value = 0
						}
						export_to_variable = {
							which = their_total_tech_level
							value = 0
						}
						variable_arithmetic_trigger = {
							change_variable = { which = our_total_tech_level which = our_adm_tech_level }
						}
						variable_arithmetic_trigger = {
							change_variable = { which = our_total_tech_level which = our_dip_tech_level }
						}
						variable_arithmetic_trigger = {
							change_variable = { which = our_total_tech_level which = our_mil_tech_level }
						}
						variable_arithmetic_trigger = {
							change_variable = { which = their_total_tech_level which = their_adm_tech_level }
						}
						variable_arithmetic_trigger = {
							change_variable = { which = their_total_tech_level which = their_dip_tech_level }
						}
						variable_arithmetic_trigger = {
							change_variable = { which = their_total_tech_level which = their_mil_tech_level }
						}
						variable_arithmetic_trigger = {
							change_variable = { which = their_total_tech_level value = -9 }
						}
						
						check_variable = { which = their_total_tech_level which = our_total_tech_level }
					}
				}
			}
		}
		capital_scope = { trade_range = FROM }
	}
	
	# Properties:
	transfer_trade_power = yes
	joins_overlords_wars = no
	joins_colonial_wars = yes
	overlord_can_attack = no
	overlord_can_be_subject = no
	can_have_subjects_of_other_types = yes
	takes_diplo_slot = no
	has_power_projection = yes
	can_release_in_peace = yes
	uses_military_focus = no
	overlord_protects_external = yes
	counts_for_borders = no							# Whether distance between borders counts this subject type as part of its overlord's borders.
	can_use_claims = no								# Whether the overlord can use the subject's claims and cores for declaring war
	share_rebel_popup = no								# Whether the Overlord gets popups about Subject's rebels and sees them in Stability View.
	allows_taking_land_without_independence = yes
	can_transfer_in_peace = no							# Whether this subject type can be made into a vassal with the "Transfer Subject" Age Ability.
	can_set_mil_focus = no
	can_send_missionary_to_subject = no				# Requires Cradle of Civilization
	
	max_government_rank = 0								# 0 means no limit
	cities_required_for_bonuses = 0						# How many cities the subject needs before giving bonuses to overlord
	trust_on_start = 5									# Overlord and subject will each get this much extra trust with each other at game start

	base_liberty_desire = 0.0
	liberty_desire_negative_prestige = 0.0
	liberty_desire_development_ratio = 0.1
	liberty_desire_same_dynasty = 0.0
	pays_overlord = 0.0									# 1.0 represents the amount payed by vassals
	forcelimit_bonus = 0.0								# 1.0 represents bonus from having a vassal
	military_focus = 0.5								# How much the AI subject should spend etc. on army and forts. 0 should make them spend nothing. Very high values will probably not make a big difference since there will be sanity checks.

	relative_power_class = 0 							# See description above
	diplomacy_view_class = 1							# See description above

	can_fight = {
		independent_nations = yes
		other_overlord = all
	}
	can_rival = {
		independent_nations = yes
		other_overlord = all
	}
	can_ally = {
		same_overlord = all
	}
	can_marry = {
		independent_nations = yes
		same_overlord = all
		other_overlord = all
	}

	# Subject Interactions:
	# (continuous)
	embargo_rivals = no
	divert_trade = yes
	# (immediate)
	siphon_income = yes
	bestow_gifts = yes

	# Modifiers:
	modifier_subject = clear # Use this to clear after copy_from.
	modifier_subject = {
		modifier = protectorate_modifier
	}
	modifier_subject = {
		trigger = {
			FROM = {
				institution_difference = { who = ROOT value = 3 }
			}
		}
		modifier = protectorate_institution_modifier_3
	}
	modifier_subject = {
		trigger = {
			FROM = {
				institution_difference = { who = ROOT value = 2 }
			}
			NOT = {
				FROM = {
					institution_difference = { who = ROOT value = 3 }
				}
			}
		}
		modifier = protectorate_institution_modifier_2
	}
	modifier_subject = {
		trigger = {
			FROM = {
				institution_difference = { who = ROOT value = 1 }
			}
			NOT = {
				FROM = {
					institution_difference = { who = ROOT value = 2 }
				}
			}
		}
		modifier = protectorate_institution_modifier_1
	}
	modifier_subject = {
		trigger = {
			NOT = { adm_tech = FROM }
		}
		modifier = protectorate_adm_tech_modifier
	}
	modifier_subject = {
		trigger = {
			NOT = { dip_tech = FROM }
		}
		modifier = protectorate_dip_tech_modifier
	}
	modifier_subject = {
		trigger = {
			NOT = { mil_tech = FROM }
		}
		modifier = protectorate_mil_tech_modifier
	}
	modifier_subject = {
		trigger = {
			adm_tech = FROM
			FROM = { adm_tech = ROOT }
		}
		modifier = protectorate_adm_liberty_desire_modifier
	}
	modifier_subject = {
		trigger = {
			dip_tech = FROM
			FROM = { dip_tech = ROOT }
		}
		modifier = protectorate_dip_liberty_desire_modifier
	}
	modifier_subject = {
		trigger = {
			mil_tech = FROM
			FROM = { mil_tech = ROOT }
		}
		modifier = protectorate_mil_liberty_desire_modifier
	}
	modifier_subject = {
		trigger = {
			FROM = { NOT = { adm_tech = ROOT } }
		}
		modifier = protectorate_advanced_adm_liberty_desire_modifier
	}
	modifier_subject = {
		trigger = {
			FROM = { NOT = { dip_tech = ROOT } }
		}
		modifier = protectorate_advanced_dip_liberty_desire_modifier
	}
	modifier_subject = {
		trigger = {
			FROM = { NOT = { mil_tech = ROOT } }
		}
		modifier = protectorate_advanced_mil_liberty_desire_modifier
	}
	
	modifier_overlord = clear

	overlord_opinion_modifier = is_protectorate # If not "null" it will look for a modifier with that name in 00_opinion_modifiers.txt and other files in that directory.
	subject_opinion_modifier = is_protectorate
}